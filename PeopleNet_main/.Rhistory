knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
Filepath <- "./PeopleNet.xlsx"
nodesData <- read.xlsx(Filepath,"nodes")
edgesData <- read.xlsx(Filepath,"edges")
head(nodesData)
head(edgesData)
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
# 加载包
library(networkD3)
# 画网络图
forceNetwork(Links = edgesData,#线性质数据框
Nodes = nodesData,#节点性质数据框
Group = "group", #节点数据中对应的列名
Source = "source",#连线的源变量 边数据中起始点ID
Target = "target",#连线的目标变量 边数据中终点ID
Value = "Value", #边的粗细值，边数据中共现频率列名
NodeID = "name", #节点名称
Nodesize = "Freq" , #节点大小，节点数据框中节点频率列名
###美化部分
fontSize = 30, #节点文本标签的数字字体大小（以像素为单位）。
linkColour="grey",#连线颜色,black,red,blue,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
#colourScale ,linkWidth,#节点颜色,red，蓝色blue,cyan,yellow等
charge = -2000,#数值表示节点排斥强度（负值）或吸引力（正值）
opacity = 0.5, #节点透明度
#nodeColour="black",
fontFamily = "黑体",
arrows=F, #是否带方向
bounded=F, #是否启用限制图像的边框
opacityNoHover=2, #当鼠标悬停在其上时，节点标签文本的不透明度比例的数值
zoom = T, #允许放缩，双击放大
#clickAction = MyClickScript
)
View(edgesData)
View(nodesData)
View(edgesData)
# 加载包
library(networkD3)
# 画网络图
forceNetwork(Links = nodesData,#线性质数据框
Nodes = edgesData,#节点性质数据框
Group = "group", #节点数据中对应的列名
Source = "source",#连线的源变量 边数据中起始点ID
Target = "target",#连线的目标变量 边数据中终点ID
Value = "Value", #边的粗细值，边数据中共现频率列名
NodeID = "name", #节点名称
Nodesize = "Freq" , #节点大小，节点数据框中节点频率列名
###美化部分
fontSize = 30, #节点文本标签的数字字体大小（以像素为单位）。
linkColour="grey",#连线颜色,black,red,blue,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
#colourScale ,linkWidth,#节点颜色,red，蓝色blue,cyan,yellow等
charge = -2000,#数值表示节点排斥强度（负值）或吸引力（正值）
opacity = 0.5, #节点透明度
#nodeColour="black",
fontFamily = "黑体",
arrows=F, #是否带方向
bounded=F, #是否启用限制图像的边框
opacityNoHover=2, #当鼠标悬停在其上时，节点标签文本的不透明度比例的数值
zoom = T, #允许放缩，双击放大
#clickAction = MyClickScript
)
# 加载包
library(networkD3)
# 画网络图
forceNetwork(Links = edgesData,#线性质数据框
Nodes = nodesData,#节点性质数据框
Group = "group", #节点 节点数据中对应的列名
Source = "source",#连线的源变量 边数据中起始点ID
Target = "target",#连线的目标变量 边数据中终点ID
Value = "Value", #边的粗细值，边数据中共现频率列名
NodeID = "name", #节点名称
Nodesize = "Freq" , #节点大小，节点数据框中节点频率列名
###美化部分
fontSize = 30, #节点文本标签的数字字体大小（以像素为单位）。
linkColour="grey",#连线颜色,black,red,blue,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
#colourScale ,linkWidth,#节点颜色,red，蓝色blue,cyan,yellow等
charge = -2000,#数值表示节点排斥强度（负值）或吸引力（正值）
opacity = 0.5, #节点透明度
#nodeColour="black",
fontFamily = "黑体",
arrows=F, #是否带方向
bounded=F, #是否启用限制图像的边框
opacityNoHover=2, #当鼠标悬停在其上时，节点标签文本的不透明度比例的数值
zoom = T, #允许放缩，双击放大
#clickAction = MyClickScript
)
# 加载包
library(networkD3)
# 画网络图
forceNetwork(Links = edgesData, Nodes = nodesData, Group = "group", #节点 节点数据中对应的列名
Source = "source",#连线的源变量 边数据中起始点ID
Target = "target",#连线的目标变量 边数据中终点ID
Value = "Value", #边的粗细值，边数据中共现频率列名
NodeID = "name", #节点名称
Nodesize = "Freq" , #节点大小，节点数据框中节点频率列名
###美化部分
fontSize = 30, #节点文本标签的数字字体大小（以像素为单位）。
linkColour="grey",#连线颜色,black,red,blue,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
#colourScale ,linkWidth,#节点颜色,red，蓝色blue,cyan,yellow等
charge = -2000,#数值表示节点排斥强度（负值）或吸引力（正值）
opacity = 0.5, #节点透明度
#nodeColour="black",
fontFamily = "黑体",
arrows=F, #是否带方向
bounded=F, #是否启用限制图像的边框
opacityNoHover=2, #当鼠标悬停在其上时，节点标签文本的不透明度比例的数值
zoom = T, #允许放缩，双击放大
#clickAction = MyClickScript
)
library(openxlsx)
Filepath <- "./PeopleNet.xlsx"
nodesData <- read.xlsx(Filepath,"nodes")
edgesData <- read.xlsx(Filepath,"edges")
str(nodesData)
head(edgesData)
str(nodesData)
# 加载包
library(networkD3)
# 画网络图
forceNetwork(NodeID = "Id",Links = edgesData,#线性质数据框
Nodes = nodesData,#节点性质数据框
Group = "group", #节点分组 节点数据中对应的列名
Source = "source",#连线的源变量 边数据中起始点ID
Target = "target",#连线的目标变量 边数据中终点ID
Value = "Value", #边的粗细值，边数据中共现频率列名
NodeID = "name", #节点名称
Nodesize = "Freq" , #节点大小，节点数据框中节点频率列名
###美化部分
fontSize = 30, #节点文本标签的数字字体大小（以像素为单位）。
linkColour="grey",#连线颜色,black,red,blue,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
#colourScale ,linkWidth,#节点颜色,red，蓝色blue,cyan,yellow等
charge = -2000,#数值表示节点排斥强度（负值）或吸引力（正值）
opacity = 0.5, #节点透明度
#nodeColour="black",
fontFamily = "黑体",
arrows=F, #是否带方向
bounded=F, #是否启用限制图像的边框
opacityNoHover=2, #当鼠标悬停在其上时，节点标签文本的不透明度比例的数值
zoom = T, #允许放缩，双击放大
#clickAction = MyClickScript
)
# 加载包
library(networkD3)
# 画网络图
forceNetwork(Links = edgesData,#线性质数据框
Nodes = nodesData,#节点性质数据框
Group = "group", #节点分组 节点数据中对应的列名
Source = "source",#连线的源变量 边数据中起始点ID
Target = "target",#连线的目标变量 边数据中终点ID
Value = "Value", #边的粗细值，边数据中共现频率列名
NodeID = "namelist", #节点名称
Nodesize = "Freq" , #节点大小，节点数据框中节点频率列名
###美化部分
fontSize = 30, #节点文本标签的数字字体大小（以像素为单位）。
linkColour="grey",#连线颜色,black,red,blue,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
#colourScale ,linkWidth,#节点颜色,red，蓝色blue,cyan,yellow等
charge = -2000,#数值表示节点排斥强度（负值）或吸引力（正值）
opacity = 0.5, #节点透明度
#nodeColour="black",
fontFamily = "黑体",
arrows=F, #是否带方向
bounded=F, #是否启用限制图像的边框
opacityNoHover=2, #当鼠标悬停在其上时，节点标签文本的不透明度比例的数值
zoom = T, #允许放缩，双击放大
#clickAction = MyClickScript
)
# 加载包
library(networkD3)
likes <- data.frame(
user = c("A","B","C","A","B","C"),
post = c(1,2,3,2,3,1)
)
nodes <- data.frame(name=c("A","B","C",1,2,3))
edges <- likes
# 画网络图
forceNetwork(Links = edges, Nodes = nodes,
Source = "user", Target = "post",
NodeID = "name", directed = TRUE)
# 加载包
library(networkD3)
likes <- data.frame(
user = c("A","B","C","A","B","C"),
post = c(1,2,3,2,3,1)
)
nodes <- data.frame(name=c("A","B","C",1,2,3))
edges <- likes
# 画网络图
forceNetwork(Links = edges, Nodes = nodes,
Source = "user", Target = "post",
NodeID = "name", directed = TRUE)
library(openxlsx)
Filepath <- "./PeopleNet.xlsx"
nodesData <- read.xlsx(Filepath,"nodes")
edgesData <- read.xlsx(Filepath,"edges")
str(nodesData)
head(edgesData)
# 加载包
library(networkD3)
# 画网络图
forceNetwork(Links = edgesData,#线性质数据框
Nodes = nodesData,#节点性质数据框
Group = "group", #节点分组 节点数据中对应的列名
Source = "source",#连线的源变量 边数据中起始点ID
Target = "target",#连线的目标变量 边数据中终点ID
Value = "Value", #边的粗细值，边数据中共现频率列名
NodeID = "namelist", #节点名称
Nodesize = "Freq" , #节点大小，节点数据框中节点频率列名
###美化部分
fontSize = 30, #节点文本标签的数字字体大小（以像素为单位）。
linkColour="grey",#连线颜色,black,red,blue,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory10);"),
#colourScale ,linkWidth,#节点颜色,red，蓝色blue,cyan,yellow等
charge = -2000,#数值表示节点排斥强度（负值）或吸引力（正值）
opacity = 0.5, #节点透明度
#nodeColour="black",
fontFamily = "黑体",
arrows=F, #是否带方向
bounded=F, #是否启用限制图像的边框
opacityNoHover=2, #当鼠标悬停在其上时，节点标签文本的不透明度比例的数值
zoom = T, #允许放缩，双击放大
#clickAction = MyClickScript
)
args(networkD3::forceNetwork)
install.packages("networkD3")
install.packages("networkD3")
library(networkD3)
src
